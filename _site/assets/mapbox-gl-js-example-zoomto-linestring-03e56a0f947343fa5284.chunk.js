webpackJsonp(["mapbox-gl-js-example-zoomto-linestring"],{"75Nx":function(n,o){n.exports='<style>\n.btn-control {\n    font:bold 12px/20px \'Helvetica Neue\', Arial, Helvetica, sans-serif;\n    background-color: #3386c0;\n    color: #fff;\n    position: absolute;\n    top: 20px;\n    left: 50%;\n    z-index: 1;\n    border: none;\n    width: 200px;\n    margin-left:-100px;\n    display: block;\n    cursor: pointer;\n    padding: 10px 20px;\n    border-radius: 3px;\n}\n\n.btn-control:hover {\n    background-color: #4ea0da;\n}\n</style>\n<div id=\'map\'></div>\n<button id=\'zoomto\' class=\'btn-control\'>Zoom to bounds</nav>\n\n<script>\n// A GeoJSON object with a LineString route from the White House to Capitol Hill\nvar geojson = {\n    "type": "FeatureCollection",\n    "features": [{\n        "type": "Feature",\n        "geometry": {\n            "type": "LineString",\n            "properties": {},\n            "coordinates": [\n                [-77.0366048812866, 38.89873175227713],\n                [-77.03364372253417, 38.89876515143842],\n                [-77.03364372253417, 38.89549195896866],\n                [-77.02982425689697, 38.89549195896866],\n                [-77.02400922775269, 38.89387200688839],\n                [-77.01519012451172, 38.891416957534204],\n                [-77.01521158218382, 38.892068305429156],\n                [-77.00813055038452, 38.892051604275686],\n                [-77.00832366943358, 38.89143365883688],\n                [-77.00818419456482, 38.89082405874451],\n                [-77.00815200805664, 38.88989712255097]\n            ]\n        }\n    }]\n};\n\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/light-v9\',\n    center: [-77.0214, 38.8970],\n    zoom: 12\n});\n\nmap.on(\'load\', function() {\n\n    map.addLayer({\n        "id": "LineString",\n        "type": "line",\n        "source": {\n            "type": "geojson",\n            "data": geojson\n        },\n        "layout": {\n            "line-join": "round",\n            "line-cap": "round"\n        },\n        "paint": {\n            "line-color": "#BF93E4",\n            "line-width": 5\n        }\n    });\n\n    document.getElementById(\'zoomto\').addEventListener(\'click\', function() {\n\n        // Geographic coordinates of the LineString\n        var coordinates = geojson.features[0].geometry.coordinates;\n\n        // Pass the first coordinates in the LineString to `lngLatBounds` &\n        // wrap each coordinate pair in `extend` to include them in the bounds\n        // result. A variation of this technique could be applied to zooming\n        // to the bounds of multiple Points or Polygon geomteries - it just\n        // requires wrapping all the coordinates with the extend method.\n        var bounds = coordinates.reduce(function(bounds, coord) {\n            return bounds.extend(coord);\n        }, new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]));\n\n        map.fitBounds(bounds, {\n            padding: 20\n        });\n    });\n});\n<\/script>\n'},iO9a:function(n,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var t=a(e("DJbt")),i=a(e("75Nx"));function a(n){return n&&n.__esModule?n:{default:n}}o.default=(0,t.default)(i.default)},v8bT:function(n,o,e){"use strict";var t=e("iO9a");t=t.default||t,n.exports={component:t,props:{frontMatter:{title:"Fit to the bounds of a LineString",description:"Get the bounds of a LineString by passing its first coordinates to [`LngLatBounds`](/mapbox-gl-js/api/#lnglatbounds) and chaining [`extend`](/mapbox-gl-js/api/#lnglatbounds#extend) to include the last coordinates.",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/zoomto-linestring/"}}}}});