webpackJsonp(["mapbox-gl-js-example-query-similar-features"],{RCa3:function(e,n){e.exports="<style>\n.map-overlay {\n    font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\n    background-color: #fff;\n    box-shadow: 0 1px 2px rgba(0,0,0,0.10);\n    border-radius: 3px;\n    position: absolute;\n    width: 25%;\n    top: 10px;\n    left: 10px;\n    padding: 10px;\n    display: none;\n}\n</style>\n\n<div id='map'></div>\n<div id='map-overlay' class='map-overlay'></div>\n\n<script>\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v9',\n    center: [-98, 38.88],\n    minZoom: 2,\n    zoom: 3\n});\n\nvar overlay = document.getElementById('map-overlay');\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\n\nmap.on('load', function() {\n    // Add the source to query. In this example we're using\n    // county polygons uploaded as vector tiles\n    map.addSource('counties', {\n        \"type\": \"vector\",\n        \"url\": \"mapbox://mapbox.82pkq93d\"\n    });\n\n    map.addLayer({\n        \"id\": \"counties\",\n        \"type\": \"fill\",\n        \"source\": \"counties\",\n        \"source-layer\": \"original\",\n        \"paint\": {\n            \"fill-outline-color\": \"rgba(0,0,0,0.1)\",\n            \"fill-color\": \"rgba(0,0,0,0.1)\"\n        }\n    }, 'place-city-sm'); // Place polygon under these labels.\n\n    map.addLayer({\n        \"id\": \"counties-highlighted\",\n        \"type\": \"fill\",\n        \"source\": \"counties\",\n        \"source-layer\": \"original\",\n        \"paint\": {\n            \"fill-outline-color\": \"#484896\",\n            \"fill-color\": \"#6e599f\",\n            \"fill-opacity\": 0.75\n        },\n        \"filter\": [\"in\", \"COUNTY\", \"\"]\n    }, 'place-city-sm'); // Place polygon under these labels.\n\n    map.on('mousemove', 'counties', function(e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n\n        // Single out the first found feature.\n        var feature = e.features[0];\n\n        // Query the counties layer visible in the map. Use the filter\n        // param to only collect results that share the same county name.\n        var relatedFeatures = map.querySourceFeatures('counties', {\n            sourceLayer: 'original',\n            filter: ['in', 'COUNTY', feature.properties.COUNTY]\n        });\n\n        // Render found features in an overlay.\n        overlay.innerHTML = '';\n\n        // Total the population of all features\n        var populationSum = relatedFeatures.reduce(function(memo, feature) {\n            return memo + feature.properties.population;\n        }, 0);\n\n        var title = document.createElement('strong');\n        title.textContent = feature.properties.COUNTY + ' (' + relatedFeatures.length + ' found)';\n\n        var population = document.createElement('div');\n        population.textContent = 'Total population: ' + populationSum.toLocaleString();\n\n        overlay.appendChild(title);\n        overlay.appendChild(population);\n        overlay.style.display = 'block';\n\n        // Add features that share the same county name to the highlighted layer.\n        map.setFilter('counties-highlighted', ['in', 'COUNTY', feature.properties.COUNTY]);\n\n        // Display a popup with the name of the county\n        popup.setLngLat(e.lngLat)\n            .setText(feature.properties.COUNTY)\n            .addTo(map);\n    });\n\n    map.on('mouseleave', 'counties', function() {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n        map.setFilter('counties-highlighted', ['in', 'COUNTY', '']);\n        overlay.style.display = 'none';\n    });\n});\n<\/script>\n"},axCM:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=r(t("DJbt")),o=r(t("RCa3"));function r(e){return e&&e.__esModule?e:{default:e}}n.default=(0,a.default)(o.default)},kojP:function(e,n,t){"use strict";var a=t("axCM");a=a.default||a,e.exports={component:a,props:{frontMatter:{title:"Highlight features containing similar data",description:"Hover over counties to highlight counties that share the same name.",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/query-similar-features/"}}}}});