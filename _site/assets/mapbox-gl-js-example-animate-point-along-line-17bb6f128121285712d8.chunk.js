webpackJsonp(["mapbox-gl-js-example-animate-point-along-line"],{"A4/H":function(n,e){n.exports='<div id=\'map\'></div>\n<script>\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/streets-v9\',\n    center: [0, 0],\n    zoom: 2\n});\n\nvar radius = 20;\n\nfunction pointOnCircle(angle) {\n    return {\n        "type": "Point",\n        "coordinates": [\n            Math.cos(angle) * radius,\n            Math.sin(angle) * radius\n        ]\n    };\n}\n\nmap.on(\'load\', function () {\n    // Add a source and layer displaying a point which will be animated in a circle.\n    map.addSource(\'point\', {\n        "type": "geojson",\n        "data": pointOnCircle(0)\n    });\n\n    map.addLayer({\n        "id": "point",\n        "source": "point",\n        "type": "circle",\n        "paint": {\n            "circle-radius": 10,\n            "circle-color": "#007cbf"\n        }\n    });\n\n    function animateMarker(timestamp) {\n        // Update the data to a new position based on the animation timestamp. The\n        // divisor in the expression `timestamp / 1000` controls the animation speed.\n        map.getSource(\'point\').setData(pointOnCircle(timestamp / 1000));\n\n        // Request the next frame of the animation.\n        requestAnimationFrame(animateMarker);\n    }\n\n    // Start the animation.\n    animateMarker(0);\n});\n<\/script>\n'},Qb3w:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=o(t("DJbt")),i=o(t("A4/H"));function o(n){return n&&n.__esModule?n:{default:n}}e.default=(0,a.default)(i.default)},UDBa:function(n,e,t){"use strict";var a=t("Qb3w");a=a.default||a,n.exports={component:a,props:{frontMatter:{title:"Animate a point",description:"Animate the position of a point by updating a GeoJSON source on each frame.",tags:["layers","sources"],pathname:"/mapbox-gl-js/example/animate-point-along-line/"}}}}});