webpackJsonp(["mapbox-gl-js-example-hover-styles"],{Vtap:function(e,t,a){"use strict";var n=a("xc3t");n=n.default||n,e.exports={component:n,props:{frontMatter:{title:"Create a hover effect",description:"Using events and [feature states](/mapbox-gl-js/api/#map#setfeaturestate) to create a per feature hover effect",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/hover-styles/"}}}},liyA:function(e,t){e.exports='<div id=\'map\'></div>\n<script>\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/streets-v9\',\n    center: [-100.486052, 37.830348],\n    zoom: 2\n});\nvar hoveredStateId =  null;\n\nmap.on(\'load\', function () {\n    map.addSource("states", {\n        "type": "geojson",\n        "data": "https://www.mapbox.com/mapbox-gl-js/assets/us_states.geojson"\n    });\n\n    // The feature-state dependent fill-opacity expression will render the hover effect\n    // when a feature\'s hover state is set to true.\n    map.addLayer({\n        "id": "state-fills",\n        "type": "fill",\n        "source": "states",\n        "layout": {},\n        "paint": {\n            "fill-color": "#627BC1",\n            "fill-opacity": ["case",\n                ["boolean", ["feature-state", "hover"], false],\n                1,\n                0.5\n            ]\n        }\n    });\n\n    map.addLayer({\n        "id": "state-borders",\n        "type": "line",\n        "source": "states",\n        "layout": {},\n        "paint": {\n            "line-color": "#627BC1",\n            "line-width": 2\n        }\n    });\n\n    // When the user moves their mouse over the state-fill layer, we\'ll update the\n    // feature state for the feature under the mouse.\n    map.on("mousemove", "state-fills", function(e) {\n        if (e.features.length > 0) {\n            if (hoveredStateId) {\n                map.setFeatureState({source: \'states\', id: hoveredStateId}, { hover: false});\n            }\n            hoveredStateId = e.features[0].id;\n            map.setFeatureState({source: \'states\', id: hoveredStateId}, { hover: true});\n        }\n    });\n\n    // When the mouse leaves the state-fill layer, update the feature state of the\n    // previously hovered feature.\n    map.on("mouseleave", "state-fills", function() {\n        if (hoveredStateId) {\n            map.setFeatureState({source: \'states\', id: hoveredStateId}, { hover: false});\n        }\n        hoveredStateId =  null;\n    });\n});\n<\/script>\n'},xc3t:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(a("DJbt")),s=o(a("liyA"));function o(e){return e&&e.__esModule?e:{default:e}}t.default=(0,n.default)(s.default)}});