webpackJsonp(["mapbox-gl-js-example-animate-marker"],{"/N9/":function(a,e){a.exports="<div id='map'></div>\n<script>\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v9',\n    center: [0, 0],\n    zoom: 2\n});\n\nvar marker = new mapboxgl.Marker();\n\nfunction animateMarker(timestamp) {\n    var radius = 20;\n\n    // Update the data to a new position based on the animation timestamp. The\n    // divisor in the expression `timestamp / 1000` controls the animation speed.\n    marker.setLngLat([\n        Math.cos(timestamp / 1000) * radius,\n        Math.sin(timestamp / 1000) * radius\n    ]);\n\n    // Ensure it's added to the map. This is safe to call if it's already added.\n    marker.addTo(map);\n\n    // Request the next frame of the animation.\n    requestAnimationFrame(animateMarker);\n}\n\n// Start the animation.\nrequestAnimationFrame(animateMarker);\n<\/script>\n"},QBXW:function(a,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(t("DJbt")),r=i(t("/N9/"));function i(a){return a&&a.__esModule?a:{default:a}}e.default=(0,n.default)(r.default)},b8Uj:function(a,e,t){"use strict";var n=t("QBXW");n=n.default||n,a.exports={component:n,props:{frontMatter:{title:"Animate a marker",description:"Animate the position of a [`Marker`](/mapbox-gl-js/api/#marker) by updating its location on each frame.",tags:["controls-and-overlays"],pathname:"/mapbox-gl-js/example/animate-marker/"}}}}});