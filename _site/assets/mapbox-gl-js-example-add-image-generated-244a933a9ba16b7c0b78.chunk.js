webpackJsonp(["mapbox-gl-js-example-add-image-generated"],{IUWy:function(e,t,n){"use strict";var a=n("UEF5");a=a.default||a,e.exports={component:a,props:{frontMatter:{title:"Add a generated icon to the map",description:"Add an icon to the map that was generated at runtime.",tags:["styles","layers"],pathname:"/mapbox-gl-js/example/add-image-generated/"}}}},UEF5:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n("DJbt")),d=r(n("YP+H"));function r(e){return e&&e.__esModule?e:{default:e}}t.default=(0,a.default)(d.default)},"YP+H":function(e,t){e.exports='<div id=\'map\'></div>\n\n<script>\n\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/streets-v9\'\n});\n\nmap.on(\'load\', function () {\n\n    var width = 64; // The image will be 64 pixels square\n    var bytesPerPixel = 4; // Each pixel is represented by 4 bytes: red, green, blue, and alpha.\n    var data = new Uint8Array(width * width * bytesPerPixel);\n\n    for (var x = 0; x < width; x++) {\n        for (var y = 0; y < width; y++) {\n            var offset = (y * width + x) * bytesPerPixel;\n            data[offset + 0] = y / width * 255; // red\n            data[offset + 1] = x / width * 255; // green\n            data[offset + 2] = 128;             // blue\n            data[offset + 3] = 255;             // alpha\n        }\n    }\n\n    map.addImage(\'gradient\', {width: width, height: width, data: data});\n\n    map.addLayer({\n        "id": "points",\n        "type": "symbol",\n        "source": {\n            "type": "geojson",\n            "data": {\n                "type": "FeatureCollection",\n                "features": [{\n                    "type": "Feature",\n                    "geometry": {\n                        "type": "Point",\n                        "coordinates": [0, 0]\n                    }\n                }]\n            }\n        },\n        "layout": {\n            "icon-image": "gradient"\n        }\n    });\n});\n\n<\/script>\n'}});