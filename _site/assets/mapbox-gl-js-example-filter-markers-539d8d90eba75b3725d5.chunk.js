webpackJsonp(["mapbox-gl-js-example-filter-markers"],{"6jXb":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=a(t("DJbt")),r=a(t("o3lP"));function a(n){return n&&n.__esModule?n:{default:n}}e.default=(0,o.default)(r.default)},"A+vO":function(n,e,t){"use strict";var o=t("6jXb");o=o.default||o,n.exports={component:o,props:{frontMatter:{title:"Filter symbols by toggling a list",description:"Filter a set of [symbols](/mapbox-gl-js/style-spec#layers-symbol) based on a property value in the data.",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/filter-markers/"}}}},o3lP:function(n,e){n.exports='<style>\n    .filter-group {\n        font: 12px/20px \'Helvetica Neue\', Arial, Helvetica, sans-serif;\n        font-weight: 600;\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 1;\n        border-radius: 3px;\n        width: 120px;\n        color: #fff;\n    }\n\n    .filter-group input[type=checkbox]:first-child + label {\n        border-radius: 3px 3px 0 0;\n    }\n\n    .filter-group label:last-child {\n        border-radius: 0 0 3px 3px;\n        border: none;\n    }\n\n    .filter-group input[type=checkbox] {\n        display: none;\n    }\n\n    .filter-group input[type=checkbox] + label {\n        background-color: #3386c0;\n        display: block;\n        cursor: pointer;\n        padding: 10px;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n    }\n\n    .filter-group input[type=checkbox] + label {\n        background-color: #3386c0;\n        text-transform: capitalize;\n    }\n\n    .filter-group input[type=checkbox] + label:hover,\n    .filter-group input[type=checkbox]:checked + label {\n        background-color: #4ea0da;\n    }\n\n    .filter-group input[type=checkbox]:checked + label:before {\n        content: \'\u2714\';\n        margin-right: 5px;\n    }\n</style>\n<div id=\'map\'></div>\n<nav id=\'filter-group\' class=\'filter-group\'></nav>\n\n<script>\nvar places = {\n    "type": "FeatureCollection",\n    "features": [{\n        "type": "Feature",\n        "properties": {\n            "icon": "theatre"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.038659, 38.931567]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "theatre"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.003168, 38.894651]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "bar"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.090372, 38.881189]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "bicycle"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.052477, 38.943951]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.031706, 38.914581]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.020945, 38.878241]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.007481, 38.876516]\n        }\n    }]\n};\n\nvar filterGroup = document.getElementById(\'filter-group\');\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/light-v9\',\n    center: [-77.04, 38.907],\n    zoom: 11.15\n});\n\nmap.on(\'load\', function() {\n    // Add a GeoJSON source containing place coordinates and information.\n    map.addSource("places", {\n        "type": "geojson",\n        "data": places\n    });\n\n    places.features.forEach(function(feature) {\n        var symbol = feature.properties[\'icon\'];\n        var layerID = \'poi-\' + symbol;\n\n        // Add a layer for this symbol type if it hasn\'t been added already.\n        if (!map.getLayer(layerID)) {\n            map.addLayer({\n                "id": layerID,\n                "type": "symbol",\n                "source": "places",\n                "layout": {\n                    "icon-image": symbol + "-15",\n                    "icon-allow-overlap": true\n                },\n                "filter": ["==", "icon", symbol]\n            });\n\n            // Add checkbox and label elements for the layer.\n            var input = document.createElement(\'input\');\n            input.type = \'checkbox\';\n            input.id = layerID;\n            input.checked = true;\n            filterGroup.appendChild(input);\n\n            var label = document.createElement(\'label\');\n            label.setAttribute(\'for\', layerID);\n            label.textContent = symbol;\n            filterGroup.appendChild(label);\n\n            // When the checkbox changes, update the visibility of the layer.\n            input.addEventListener(\'change\', function(e) {\n                map.setLayoutProperty(layerID, \'visibility\',\n                    e.target.checked ? \'visible\' : \'none\');\n            });\n        }\n    });\n});\n<\/script>\n'}});