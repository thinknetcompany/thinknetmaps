webpackJsonp(["mapbox-gl-js-example-using-box-queryrenderedfeatures"],{GwVw:function(e,n){e.exports='<style>\n.boxdraw {\n    background: rgba(56,135,190,0.1);\n    border: 2px solid #3887be;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 0;\n    height: 0;\n}\n</style>\n\n<div id=\'map\'></div>\n\n<script>\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/streets-v9\',\n    center: [-98, 38.88],\n    minZoom: 2,\n    zoom: 3\n});\n\n// Disable default box zooming.\nmap.boxZoom.disable();\n\n// Create a popup, but don\'t add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\n\nmap.on(\'load\', function() {\n    var canvas = map.getCanvasContainer();\n\n    // Variable to hold the starting xy coordinates\n    // when `mousedown` occured.\n    var start;\n\n    // Variable to hold the current xy coordinates\n    // when `mousemove` or `mouseup` occurs.\n    var current;\n\n    // Variable for the draw box element.\n    var box;\n\n    // Add the source to query. In this example we\'re using\n    // county polygons uploaded as vector tiles\n    map.addSource(\'counties\', {\n        "type": "vector",\n        "url": "mapbox://mapbox.82pkq93d"\n    });\n\n    map.addLayer({\n        "id": "counties",\n        "type": "fill",\n        "source": "counties",\n        "source-layer": "original",\n        "paint": {\n            "fill-outline-color": "rgba(0,0,0,0.1)",\n            "fill-color": "rgba(0,0,0,0.1)"\n        }\n    }, \'place-city-sm\'); // Place polygon under these labels.\n\n    map.addLayer({\n        "id": "counties-highlighted",\n        "type": "fill",\n        "source": "counties",\n        "source-layer": "original",\n        "paint": {\n            "fill-outline-color": "#484896",\n            "fill-color": "#6e599f",\n            "fill-opacity": 0.75\n        },\n        "filter": ["in", "FIPS", ""]\n    }, \'place-city-sm\'); // Place polygon under these labels.\n\n    // Set `true` to dispatch the event before other functions\n    // call it. This is necessary for disabling the default map\n    // dragging behaviour.\n    canvas.addEventListener(\'mousedown\', mouseDown, true);\n\n    // Return the xy coordinates of the mouse position\n    function mousePos(e) {\n        var rect = canvas.getBoundingClientRect();\n        return new mapboxgl.Point(\n            e.clientX - rect.left - canvas.clientLeft,\n            e.clientY - rect.top - canvas.clientTop\n        );\n    }\n\n    function mouseDown(e) {\n        // Continue the rest of the function if the shiftkey is pressed.\n        if (!(e.shiftKey && e.button === 0)) return;\n\n        // Disable default drag zooming when the shift key is held down.\n        map.dragPan.disable();\n\n        // Call functions for the following events\n        document.addEventListener(\'mousemove\', onMouseMove);\n        document.addEventListener(\'mouseup\', onMouseUp);\n        document.addEventListener(\'keydown\', onKeyDown);\n\n        // Capture the first xy coordinates\n        start = mousePos(e);\n    }\n\n    function onMouseMove(e) {\n        // Capture the ongoing xy coordinates\n        current = mousePos(e);\n\n        // Append the box element if it doesnt exist\n        if (!box) {\n            box = document.createElement(\'div\');\n            box.classList.add(\'boxdraw\');\n            canvas.appendChild(box);\n        }\n\n        var minX = Math.min(start.x, current.x),\n            maxX = Math.max(start.x, current.x),\n            minY = Math.min(start.y, current.y),\n            maxY = Math.max(start.y, current.y);\n\n        // Adjust width and xy position of the box element ongoing\n        var pos = \'translate(\' + minX + \'px,\' + minY + \'px)\';\n        box.style.transform = pos;\n        box.style.WebkitTransform = pos;\n        box.style.width = maxX - minX + \'px\';\n        box.style.height = maxY - minY + \'px\';\n    }\n\n    function onMouseUp(e) {\n        // Capture xy coordinates\n        finish([start, mousePos(e)]);\n    }\n\n    function onKeyDown(e) {\n        // If the ESC key is pressed\n        if (e.keyCode === 27) finish();\n    }\n\n    function finish(bbox) {\n        // Remove these events now that finish has been called.\n        document.removeEventListener(\'mousemove\', onMouseMove);\n        document.removeEventListener(\'keydown\', onKeyDown);\n        document.removeEventListener(\'mouseup\', onMouseUp);\n\n        if (box) {\n            box.parentNode.removeChild(box);\n            box = null;\n        }\n\n        // If bbox exists. use this value as the argument for `queryRenderedFeatures`\n        if (bbox) {\n            var features = map.queryRenderedFeatures(bbox, { layers: [\'counties\'] });\n\n            if (features.length >= 1000) {\n                return window.alert(\'Select a smaller number of features\');\n            }\n\n            // Run through the selected features and set a filter\n            // to match features with unique FIPS codes to activate\n            // the `counties-highlighted` layer.\n            var filter = features.reduce(function(memo, feature) {\n                memo.push(feature.properties.FIPS);\n                return memo;\n            }, [\'in\', \'FIPS\']);\n\n            map.setFilter("counties-highlighted", filter);\n        }\n\n        map.dragPan.enable();\n    }\n\n    map.on(\'mousemove\', function(e) {\n        var features = map.queryRenderedFeatures(e.point, { layers: [\'counties-highlighted\'] });\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = (features.length) ? \'pointer\' : \'\';\n\n        if (!features.length) {\n            popup.remove();\n            return;\n        }\n\n        var feature = features[0];\n\n        popup.setLngLat(e.lngLat)\n            .setText(feature.properties.COUNTY)\n            .addTo(map);\n    });\n});\n<\/script>\n'},Y6Mw:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=r(t("DJbt")),a=r(t("GwVw"));function r(e){return e&&e.__esModule?e:{default:e}}n.default=(0,o.default)(a.default)},cFFI:function(e,n,t){"use strict";var o=t("Y6Mw");o=o.default||o,e.exports={component:o,props:{frontMatter:{title:"Highlight features within a bounding box",description:"Hold the Shift key and drag the map to query features using [`queryRenderedFeatures`](/mapbox-gl-js/api/#map#queryrenderedfeatures).",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/using-box-queryrenderedfeatures/"}}}}});