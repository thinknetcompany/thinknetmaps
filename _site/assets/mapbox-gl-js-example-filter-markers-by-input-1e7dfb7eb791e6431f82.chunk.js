webpackJsonp(["mapbox-gl-js-example-filter-markers-by-input"],{"4IQn":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=o(t("DJbt")),i=o(t("WtNw"));function o(n){return n&&n.__esModule?n:{default:n}}e.default=(0,r.default)(i.default)},WtNw:function(n,e){n.exports='<style>\n    .filter-ctrl {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 1;\n        width: 180px;\n    }\n\n    .filter-ctrl input[type=text] {\n        font: 12px/20px \'Helvetica Neue\', Arial, Helvetica, sans-serif;\n        width: 100%;\n        border: 0;\n        background-color: #fff;\n        height: 40px;\n        margin: 0;\n        color: rgba(0,0,0,.5);\n        padding: 10px;\n        box-shadow: 0 0 0 2px rgba(0,0,0,0.1);\n        border-radius: 3px;\n    }\n</style>\n<div id=\'map\'></div>\n<div class=\'filter-ctrl\'>\n    <input id=\'filter-input\' type=\'text\' name=\'filter\' placeholder=\'Filter by name\' />\n</div>\n\n<script>\nvar places = {\n    "type": "FeatureCollection",\n    "features": [{\n        "type": "Feature",\n        "properties": {\n            "icon": "theatre"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.038659, 38.931567]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "theatre"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.003168, 38.894651]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "bar"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.090372, 38.881189]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "bicycle"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.052477, 38.943951]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.031706, 38.914581]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.020945, 38.878241]\n        }\n    }, {\n        "type": "Feature",\n        "properties": {\n            "icon": "music"\n        },\n        "geometry": {\n            "type": "Point",\n            "coordinates": [-77.007481, 38.876516]\n        }\n    }]\n};\n\nvar layerIDs = []; // Will contain a list used to filter against.\nvar filterInput = document.getElementById(\'filter-input\');\nvar map = new mapboxgl.Map({\n    container: \'map\',\n    style: \'mapbox://styles/mapbox/light-v9\',\n    center: [-77.04, 38.907],\n    zoom: 11.15\n});\n\nmap.on(\'load\', function() {\n    // Add a GeoJSON source containing place coordinates and information.\n    map.addSource(\'places\', {\n        "type": "geojson",\n        "data": places\n    });\n\n    places.features.forEach(function(feature) {\n        var symbol = feature.properties[\'icon\'];\n        var layerID = \'poi-\' + symbol;\n\n        // Add a layer for this symbol type if it hasn\'t been added already.\n        if (!map.getLayer(layerID)) {\n            map.addLayer({\n                "id": layerID,\n                "type": "symbol",\n                "source": "places",\n                "layout": {\n                    "icon-image": symbol + "-15",\n                    "icon-allow-overlap": true,\n                    "text-field": symbol,\n                    "text-font": ["Open Sans Bold", "Arial Unicode MS Bold"],\n                    "text-size": 11,\n                    "text-transform": "uppercase",\n                    "text-letter-spacing": 0.05,\n                    "text-offset": [0, 1.5]\n                },\n                "paint": {\n                    "text-color": "#202",\n                    "text-halo-color": "#fff",\n                    "text-halo-width": 2\n                },\n                "filter": ["==", "icon", symbol]\n            });\n\n            layerIDs.push(layerID);\n        }\n    });\n\n    filterInput.addEventListener(\'keyup\', function(e) {\n        // If the input value matches a layerID set\n        // it\'s visibility to \'visible\' or else hide it.\n        var value = e.target.value.trim().toLowerCase();\n        layerIDs.forEach(function(layerID) {\n            map.setLayoutProperty(layerID, \'visibility\',\n                layerID.indexOf(value) > -1 ? \'visible\' : \'none\');\n        });\n    });\n});\n<\/script>\n'},jmXG:function(n,e,t){"use strict";var r=t("4IQn");r=r.default||r,n.exports={component:r,props:{frontMatter:{title:"Filter symbols by text input",description:"Filter [symbols](/mapbox-gl-js/style-spec#layers-symbol) by icon name by typing in a text input.",tags:["user-interaction"],pathname:"/mapbox-gl-js/example/filter-markers-by-input/"}}}}});